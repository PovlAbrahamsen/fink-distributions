diff -ruN muscle-5.3-orig/muscle.1 muscle-5.3/muscle.1
--- muscle-5.3-orig/muscle.1	1969-12-31 18:00:00
+++ muscle-5.3/muscle.1	2025-07-13 20:27:58
@@ -0,0 +1,93 @@
+.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.2.
+.TH MUSCLE "1" "February 2023" "muscle 5.1.0" "User Commands"
+.SH NAME
+muscle \- Multiple alignment program of protein sequences
+.SH DESCRIPTION
+MUSCLe is a multiple alignment program for protein sequences. MUSCLE
+stands for multiple sequence comparison by log-expectation. In the
+authors tests, MUSCLE achieved the highest scores of all tested
+programs on several alignment accuracy benchmarks, and is also one of
+the fastest programs out there.
+.SH USAGE
+.SS "Align FASTA input, write aligned FASTA (AFA) output:"
+.IP
+muscle \fB\-align\fR input.fa \fB\-output\fR aln.afa
+.PP
+Align large input using Super5 algorithm if \fB\-align\fR is too expensive,
+typically needed with more than a few hundred sequences:
+.IP
+muscle \fB\-super5\fR input.fa \fB\-output\fR aln.afa
+.SS "Single replicate alignment:"
+.IP
+muscle \fB\-align\fR input.fa \fB\-perm\fR PERM \fB\-perturb\fR SEED \fB\-output\fR aln.afa
+muscle \fB\-super5\fR input.fa \fB\-perm\fR PERM \fB\-perturb\fR SEED \fB\-output\fR aln.afa
+.IP
+PERM is guide tree permutation none, abc, acb, bca (default none).
+SEED is perturbation seed 0, 1, 2... (default 0 = don't perturb).
+.PP
+Ensemble of replicate alignments, output in Ensemble FASTA (EFA) format,
+EFA has one aligned FASTA for each replicate with header line "<PERM.SEED":
+.IP
+muscle \fB\-align\fR input.fa \fB\-stratified\fR \fB\-output\fR stratified_ensemble.efa
+muscle \fB\-align\fR input.fa \fB\-diversified\fR \fB\-output\fR diversified_ensemble.afa
+.HP
+\fB\-replicates\fR N
+.IP
+Number of replicates, defaults 4, 100, 100 for stratified,
+.IP
+diversified, resampled. With \fB\-stratified\fR there is one
+replicate per guide tree permutation, total is 4 x N.
+.PP
+Generate resampled ensemble from existing ensemble by sampling columns
+with replacement:
+.IP
+muscle \fB\-resample\fR ensemble.efa \fB\-output\fR resampled.efa
+.HP
+\fB\-max_gap_fract\fR F
+.IP
+Maximum fraction of gaps in a column (F=0..1, default 0.5).
+.HP
+\fB\-minconf\fR CC
+.IP
+Minimum column confidence (CC=0..1, default 0.5).
+.PP
+If ensemble output filename has @, then one FASTA file is generated
+for each replicate where @ is replaced by perm.s, otherwise all replicates
+are written to one EFA file.
+.SS "Calculate disperson of an ensemble:"
+.IP
+muscle \fB\-disperse\fR ensemble.efa
+.SS "Extract replicate with highest total CC (diversified input recommended):"
+.IP
+muscle \fB\-maxcc\fR ensemble.efa \fB\-output\fR maxcc.afa
+.SS "Extract aligned FASTA files from EFA file:"
+.IP
+muscle \fB\-efa_explode\fR ensemble.efa
+.SS "Convert FASTA to EFA, input has one filename per line:"
+.IP
+muscle \fB\-fa2efa\fR filenames.txt \fB\-output\fR ensemble.efa
+.PP
+Update ensemble by adding two sequences of digits to each replicate, digits
+are column confidence (CC) values, e.g. "73" means CC=0.73, "++" is CC=1.0:
+.IP
+muscle \fB\-addconfseq\fR ensemble.efa \fB\-output\fR ensemble_cc.efa
+.PP
+Calculate letter confidence (LC) values, \fB\-ref\fR specifies the alignment to
+compare against the ensemble (e.g. from \fB\-maxcc\fR), output is in aligned
+FASTA format with LC values 0, 1 ... 9 instead of letters:
+.IP
+muscle \fB\-letterconf\fR ensemble.efa \fB\-ref\fR aln.afa \fB\-output\fR letterconf.afa
+.HP
+\fB\-html\fR aln.html
+.IP
+Alignment colored by LC in HTML format.
+.HP
+\fB\-jalview\fR aln.features
+.IP
+Jalview feature file with LC values and colors.
+.SS "More documentation at:"
+.IP
+https://drive5.com/muscle
+.SH AUTHOR
+ This manpage was written for the Fink Project using help2man and
+ can be used for any other usage of the program.
diff -ruN muscle-5.3-orig/src/Makefile muscle-5.3/src/Makefile
--- muscle-5.3-orig/src/Makefile	1969-12-31 18:00:00
+++ muscle-5.3/src/Makefile	2025-07-13 20:28:23
@@ -0,0 +1,353 @@
+######################################################
+# Makefile is generated by ./vcxproj_make.py
+# Don't edit the Makefile -- update the python script
+######################################################
+
+BINDIR := ../bin
+OBJDIR := o
+BINPATH := $(BINDIR)/muscle
+
+CXX = g++-fsf-12
+CXXFLAGS := $(CFLAGS)  -ffast-math -march=native -O3 -DNDEBUG -fopenmp
+
+UNAME_S := $(shell uname -s)
+LDFLAGS := $(LDFLAGS)  -ffast-math -march=native -O3 -fopenmp
+ifeq ($(UNAME_S),Linux)
+    LDFLAGS += -static
+endif
+
+HDRS = \
+  allocmx.h \
+  alpha.h \
+  alpha3.h \
+  bench.h \
+  best3.h \
+  build_describe.h \
+  build_time.h \
+  cachemem3.h \
+  chainer.h \
+  clustalweights.h \
+  cmds.h \
+  countsort.h \
+  derep.h \
+  diagbox.h \
+  eacluster.h \
+  ensemble.h \
+  enumpaths.h \
+  estring.h \
+  filebuffer.h \
+  flatmx.h \
+  gobuff.h \
+  gtbnode.h \
+  gtbuilder.h \
+  heatmapcolors.h \
+  help.h \
+  hmmparams.h \
+  hmmscores.h \
+  hmmtrans.h \
+  kmerdist33.h \
+  kmerdist66.h \
+  kmerscan.h \
+  locallock.h \
+  m3alnparams.h \
+  masm.h \
+  masmcol.h \
+  mega.h \
+  mpcflat.h \
+  mpcflat_mega.h \
+  msa.h \
+  multisequence.h \
+  muscle.h \
+  muscle3.h \
+  mx.h \
+  myalloc.h \
+  myopts.h \
+  mysparsemx.h \
+  myutils.h \
+  obj.h \
+  objmgr.h \
+  objtype.h \
+  objtypes.h \
+  omplock.h \
+  pairhmm.h \
+  pathinfo.h \
+  pathscorer.h \
+  pprog.h \
+  pprog3.h \
+  pprog_mega.h \
+  profile3.h \
+  profpos3.h \
+  pwpath.h \
+  qscorer.h \
+  qscorer2.h \
+  qscorer3.h \
+  quarts.h \
+  scoretype.h \
+  seq.h \
+  seqinfo.h \
+  sequence.h \
+  simplecluster.h \
+  sort.h \
+  super4.h \
+  super5.h \
+  super6.h \
+  super7.h \
+  sweeper.h \
+  swer.h \
+  swtester.h \
+  swtrace.h \
+  textfile.h \
+  timing.h \
+  tracebit.h \
+  transaln.h \
+  tree.h \
+  treeperm.h \
+  treesplitter.h \
+  types.h \
+  uclust.h \
+  uclustpd.h \
+  upgma5.h \
+  usage.h \
+  usorter.h \
+  viterbiparams.h \
+  xdpmem.h \
+
+OBJS = \
+  $(OBJDIR)/addconfseq.o \
+  $(OBJDIR)/align.o \
+  $(OBJDIR)/alignmsasbycols.o \
+  $(OBJDIR)/alnmsasflat_mega.o \
+  $(OBJDIR)/blosumsmx.o \
+  $(OBJDIR)/bwdflat_mega.o \
+  $(OBJDIR)/calcpost.o \
+  $(OBJDIR)/cmd_cmp_msa.o \
+  $(OBJDIR)/cmd_m3ensemble.o \
+  $(OBJDIR)/cmd_mustang_core.o \
+  $(OBJDIR)/cmd_newbench_pfamgroups.o \
+  $(OBJDIR)/cmd_newbench_selectpfams.o \
+  $(OBJDIR)/cmd_squeeze_inserts.o \
+  $(OBJDIR)/cmp_ref_msas.o \
+  $(OBJDIR)/enumpaths.o \
+  $(OBJDIR)/fwdflat_mega.o \
+  $(OBJDIR)/getpostpairsalignedflat_mega.o \
+  $(OBJDIR)/hscore.o \
+  $(OBJDIR)/loadinput.o \
+  $(OBJDIR)/logaln_masm.o \
+  $(OBJDIR)/pathscorer.o \
+  $(OBJDIR)/swenumdp.o \
+  $(OBJDIR)/swer.o \
+  $(OBJDIR)/swmasm_megaprof.o \
+  $(OBJDIR)/swps.o \
+  $(OBJDIR)/swsimple.o \
+  $(OBJDIR)/swsimple2.o \
+  $(OBJDIR)/swtest.o \
+  $(OBJDIR)/swtester.o \
+  $(OBJDIR)/swtestmm.o \
+  $(OBJDIR)/test_sw_aa.o \
+  $(OBJDIR)/test_sw_mm.o \
+  $(OBJDIR)/viterbimega.o \
+  $(OBJDIR)/writelocalaln.o \
+  $(OBJDIR)/m3alnparams.o \
+  $(OBJDIR)/alignpairflat.o \
+  $(OBJDIR)/allocflat.o \
+  $(OBJDIR)/alnalnsflat.o \
+  $(OBJDIR)/alnmsasbypath.o \
+  $(OBJDIR)/alnmsasflat.o \
+  $(OBJDIR)/alnmsasflat3.o \
+  $(OBJDIR)/alnprof3sbypath.o \
+  $(OBJDIR)/alpha2.o \
+  $(OBJDIR)/alpha3.o \
+  $(OBJDIR)/alpha6.o \
+  $(OBJDIR)/assertsameseqs.o \
+  $(OBJDIR)/bench.o \
+  $(OBJDIR)/cmd_bench.o \
+  $(OBJDIR)/bittraceback.o \
+  $(OBJDIR)/blosum.o \
+  $(OBJDIR)/clustalweights.o \
+  $(OBJDIR)/cmd_batch.o \
+  $(OBJDIR)/cmd_muscle3.o \
+  $(OBJDIR)/enumgrid.o \
+  $(OBJDIR)/estring.o \
+  $(OBJDIR)/build_guide_tree.o \
+  $(OBJDIR)/calcalnscoresparse.o \
+  $(OBJDIR)/eesort.o \
+  $(OBJDIR)/gtbnode.o \
+  $(OBJDIR)/heatmapcolors.o \
+  $(OBJDIR)/jalview.o \
+  $(OBJDIR)/kimuradist.o \
+  $(OBJDIR)/kmerdist33.o \
+  $(OBJDIR)/kmerdist66.o \
+  $(OBJDIR)/letterconf.o \
+  $(OBJDIR)/diagbox.o \
+  $(OBJDIR)/buildposterior3flat.o \
+  $(OBJDIR)/buildpostflat.o \
+  $(OBJDIR)/bwdflat3.o \
+  $(OBJDIR)/calcalnflat.o \
+  $(OBJDIR)/calcalnscoreflat.o \
+  $(OBJDIR)/calcposteriorflat.o \
+  $(OBJDIR)/conspairflat.o \
+  $(OBJDIR)/consflat.o \
+  $(OBJDIR)/defaulthmmparams.o \
+  $(OBJDIR)/derep.o \
+  $(OBJDIR)/disperse.o \
+  $(OBJDIR)/dividetree.o \
+  $(OBJDIR)/eacluster.o \
+  $(OBJDIR)/efabestcols.o \
+  $(OBJDIR)/efabestconf.o \
+  $(OBJDIR)/efaexplode.o \
+  $(OBJDIR)/efastats.o \
+  $(OBJDIR)/ensemble.o \
+  $(OBJDIR)/fa2efa.o \
+  $(OBJDIR)/fwdflat3.o \
+  $(OBJDIR)/getpairs.o \
+  $(OBJDIR)/getpostpairsalignedflat.o \
+  $(OBJDIR)/letterconfhtml.o \
+  $(OBJDIR)/logdistmx.o \
+  $(OBJDIR)/logmx.o \
+  $(OBJDIR)/m3refine.o \
+  $(OBJDIR)/m3select.o \
+  $(OBJDIR)/make_a2m.o \
+  $(OBJDIR)/make_a2m_refseq.o \
+  $(OBJDIR)/make_substmx.o \
+  $(OBJDIR)/masm.o \
+  $(OBJDIR)/masm_train.o \
+  $(OBJDIR)/maxcc.o \
+  $(OBJDIR)/mega_msas.o \
+  $(OBJDIR)/mpcflat.o \
+  $(OBJDIR)/eadistmx.o \
+  $(OBJDIR)/eadistmxmsas.o \
+  $(OBJDIR)/fasta.o \
+  $(OBJDIR)/fasta2.o \
+  $(OBJDIR)/mpcflat_mega.o \
+  $(OBJDIR)/msaselfscore3.o \
+  $(OBJDIR)/muscle3.o \
+  $(OBJDIR)/mx.o \
+  $(OBJDIR)/myalloc.o \
+  $(OBJDIR)/mysparsemx.o \
+  $(OBJDIR)/nwsmall3.o \
+  $(OBJDIR)/objmgr.o \
+  $(OBJDIR)/pathinfo.o \
+  $(OBJDIR)/perturbhmm.o \
+  $(OBJDIR)/getconsseq.o \
+  $(OBJDIR)/globalinputms.o \
+  $(OBJDIR)/guidetreejoinorder.o \
+  $(OBJDIR)/hmmdump.o \
+  $(OBJDIR)/hmmparams.o \
+  $(OBJDIR)/jointrees.o \
+  $(OBJDIR)/logaln.o \
+  $(OBJDIR)/main.o \
+  $(OBJDIR)/msastats.o \
+  $(OBJDIR)/multisequence.o \
+  $(OBJDIR)/permutetree.o \
+  $(OBJDIR)/pprog.o \
+  $(OBJDIR)/pprog2.o \
+  $(OBJDIR)/pprog3.o \
+  $(OBJDIR)/pprogt.o \
+  $(OBJDIR)/pprog_mega.o \
+  $(OBJDIR)/pprog_tree.o \
+  $(OBJDIR)/probcons.o \
+  $(OBJDIR)/msa.o \
+  $(OBJDIR)/msa2.o \
+  $(OBJDIR)/myutils.o \
+  $(OBJDIR)/colscoreefa.o \
+  $(OBJDIR)/profalign.o \
+  $(OBJDIR)/profile3.o \
+  $(OBJDIR)/masmcol.o \
+  $(OBJDIR)/mega.o \
+  $(OBJDIR)/profpos3.o \
+  $(OBJDIR)/profprof3.o \
+  $(OBJDIR)/profseq.o \
+  $(OBJDIR)/protdist.o \
+  $(OBJDIR)/protdistpair.o \
+  $(OBJDIR)/protdists.o \
+  $(OBJDIR)/qscore.o \
+  $(OBJDIR)/qscoreefa.o \
+  $(OBJDIR)/qscorer2.o \
+  $(OBJDIR)/randomchaintree.o \
+  $(OBJDIR)/randomdistmx.o \
+  $(OBJDIR)/relabel.o \
+  $(OBJDIR)/repredict.o \
+  $(OBJDIR)/resample.o \
+  $(OBJDIR)/runthreads.o \
+  $(OBJDIR)/scoretest.o \
+  $(OBJDIR)/searchpd.o \
+  $(OBJDIR)/seqinfo.o \
+  $(OBJDIR)/showseqstats.o \
+  $(OBJDIR)/shrub.o \
+  $(OBJDIR)/simplecluster.o \
+  $(OBJDIR)/spatter.o \
+  $(OBJDIR)/stripgappy.o \
+  $(OBJDIR)/stripgappyrows.o \
+  $(OBJDIR)/strip_anchors.o \
+  $(OBJDIR)/substmxfromfile.o \
+  $(OBJDIR)/super6.o \
+  $(OBJDIR)/super7.o \
+  $(OBJDIR)/super7_mega.o \
+  $(OBJDIR)/sw.o \
+  $(OBJDIR)/swdistmx.o \
+  $(OBJDIR)/sweep.o \
+  $(OBJDIR)/sweeper.o \
+  $(OBJDIR)/swmasm.o \
+  $(OBJDIR)/swmasm_seq.o \
+  $(OBJDIR)/test.o \
+  $(OBJDIR)/test_malloc.o \
+  $(OBJDIR)/test_mega.o \
+  $(OBJDIR)/tracebackbitmem.o \
+  $(OBJDIR)/transalnref.o \
+  $(OBJDIR)/tree.o \
+  $(OBJDIR)/tree2.o \
+  $(OBJDIR)/tree4.o \
+  $(OBJDIR)/treefromfile.o \
+  $(OBJDIR)/treetofile.o \
+  $(OBJDIR)/pairhmm.o \
+  $(OBJDIR)/progalnflat.o \
+  $(OBJDIR)/project.o \
+  $(OBJDIR)/qscore_oldcode.o \
+  $(OBJDIR)/qscore2.o \
+  $(OBJDIR)/qscorer.o \
+  $(OBJDIR)/quarts.o \
+  $(OBJDIR)/refineflat.o \
+  $(OBJDIR)/relaxflat.o \
+  $(OBJDIR)/seb8.o \
+  $(OBJDIR)/sequence.o \
+  $(OBJDIR)/setprobconsparams.o \
+  $(OBJDIR)/seq.o \
+  $(OBJDIR)/stripgappycols.o \
+  $(OBJDIR)/super4.o \
+  $(OBJDIR)/super5.o \
+  $(OBJDIR)/testfb.o \
+  $(OBJDIR)/testlog.o \
+  $(OBJDIR)/testscoretype.o \
+  $(OBJDIR)/textfile.o \
+  $(OBJDIR)/totalprobflat.o \
+  $(OBJDIR)/tracebackflat.o \
+  $(OBJDIR)/transaln.o \
+  $(OBJDIR)/transq.o \
+  $(OBJDIR)/treeperm.o \
+  $(OBJDIR)/treesplitter.o \
+  $(OBJDIR)/treesubsetnodes.o \
+  $(OBJDIR)/trimtoref.o \
+  $(OBJDIR)/trimtorefefa.o \
+  $(OBJDIR)/uclust.o \
+  $(OBJDIR)/uclustpd.o \
+  $(OBJDIR)/uclustpd2.o \
+  $(OBJDIR)/upgma5.o \
+  $(OBJDIR)/upgma5_msa.o \
+  $(OBJDIR)/usage.o \
+  $(OBJDIR)/usorter.o \
+  $(OBJDIR)/viterbifastmem.o \
+
+.PHONY: clean
+
+$(BINPATH) : $(BINDIR)/ $(OBJDIR)/ $(OBJS)
+	$(CXX) $(LDFLAGS) $(OBJS) -o $(BINPATH)
+	strip $(BINPATH)
+
+$(OBJDIR)/ :
+	mkdir -p $(OBJDIR)/
+
+$(BINDIR)/ :
+	mkdir -p $(BINDIR)/
+
+$(OBJDIR)/%.o : %.cpp $(HDRS)
+	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c -o $@ $<
