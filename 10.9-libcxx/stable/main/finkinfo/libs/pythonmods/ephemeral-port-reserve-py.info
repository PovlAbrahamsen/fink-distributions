Info2: <<
Package: ephemeral-port-reserve-py%type_pkg[python]
Version: 1.1.4
Revision: 1
Description: Bind to an ephemeral port, wait, and unbind
License: BSD
# Free to modify, update, and take over
Maintainer: Hanspeter Niederstrasser <nieder@users.sourceforge.net>
Type: python (3.7 3.8 3.9 3.10)
Depends: <<
	python%type_pkg[python]
<<
BuildDepends: <<
	setuptools-tng-py%type_pkg[python]
<<
Source: https://files.pythonhosted.org/packages/source/e/ephemeral_port_reserve/ephemeral_port_reserve-%v.tar.gz
Source-Checksum: SHA256(b8f7da2c97090cb0801949dec1d6d40c97220505b742a70935ffbd43234c14b2)
CompileScript: <<
	%p/bin/python%type_raw[python] setup.py build
<<

# no tests bundled with 1.1.4 tarball
#InfoTest: <<
#	TestDepends: <<
#		pytest-py%type_pkg[python]
#	<<
#	TestScript: %p/bin/python%type_raw[python] -m pytest || exit 2
#<<

InstallScript: <<
	%p/bin/python%type_raw[python] setup.py install --root %d
	mv %i/bin/ephemeral-port-reserve %i/bin/ephemeral-port-reserve-py%type_raw[python]
<<
PostInstScript: <<
	update-alternatives --verbose --install %p/bin/ephemeral-port-reserve ephemeral-port-reserve %p/bin/ephemeral-port-reserve-py%type_raw[python] %type_pkg[python] 		
<<
PreRmScript: <<
	if [ $1 != "upgrade" ]; then
		update-alternatives --verbose --remove ephemeral-port-reserve %p/bin/ephemeral-port-reserve-py%type_raw[python]
	fi
<<
DocFiles: LICENSE README.md
Homepage: https://pypi.org/project/ephemeral-port-reserve/
DescDetail: <<
Sometimes you need a networked program to bind to a port that can't be
hard-coded. Generally this is when you want to run several of them in
parallel; if they all bind to port 8080, only one of them can succeed.

The usual solution is the "port 0 trick". If you bind to port 0, your
kernel will find some arbitrary high-numbered port that's unused and
bind to that. Afterward you can query the actual port that was bound to
if you need to use the port number elsewhere. However, there are cases
where the port 0 trick won't work. For example, mysqld takes port 0 to
mean "the port configured in my.cnf". Docker can bind your containers to
port 0, but uses its own implementation to find a free port which races
and fails in the face of parallelism.

ephemeral-port-reserve provides an implementation of the port 0 trick
which is reliable and race-free.
<<
<<
