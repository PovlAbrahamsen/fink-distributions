diff -ruN pytest-asyncio-0.21.1-orig/dependencies/default/constraints.txt pytest-asyncio-0.21.1/dependencies/default/constraints.txt
--- pytest-asyncio-0.21.1-orig/dependencies/default/constraints.txt	2023-07-12 05:11:21.000000000 -0500
+++ pytest-asyncio-0.21.1/dependencies/default/constraints.txt	2024-03-13 20:11:26.000000000 -0500
@@ -2,13 +2,10 @@
 attrs==23.1.0
 coverage==7.2.7
 exceptiongroup==1.1.2
-flaky==3.7.0
 hypothesis==6.79.4
 idna==3.4
 importlib-metadata==6.7.0
 iniconfig==2.0.0
-mypy==1.4.1
-mypy-extensions==1.0.0
 outcome==1.2.0
 packaging==23.1
 pluggy==1.2.0
diff -ruN pytest-asyncio-0.21.1-orig/setup.cfg pytest-asyncio-0.21.1/setup.cfg
--- pytest-asyncio-0.21.1-orig/setup.cfg	2023-07-12 05:12:33.000000000 -0500
+++ pytest-asyncio-0.21.1/setup.cfg	2024-03-13 20:12:12.000000000 -0500
@@ -45,8 +45,6 @@
 testing = 
 	coverage >= 6.2
 	hypothesis >= 5.7.1
-	flaky >= 3.5.0
-	mypy >= 0.931
 	pytest-trio >= 0.7.0
 docs = 
 	sphinx >= 5.3
diff -ruN pytest-asyncio-0.21.1-orig/tests/test_flaky_integration.py pytest-asyncio-0.21.1/tests/test_flaky_integration.py
--- pytest-asyncio-0.21.1-orig/tests/test_flaky_integration.py	2023-07-12 05:11:21.000000000 -0500
+++ pytest-asyncio-0.21.1/tests/test_flaky_integration.py	1969-12-31 18:00:00.000000000 -0600
@@ -1,43 +0,0 @@
-"""Tests for the Flaky integration, which retries failed tests.
-"""
-from textwrap import dedent
-
-
-def test_auto_mode_cmdline(testdir):
-    testdir.makepyfile(
-        dedent(
-            """\
-        import asyncio
-        import flaky
-        import pytest
-
-        _threshold = -1
-
-        @flaky.flaky(3, 2)
-        @pytest.mark.asyncio
-        async def test_asyncio_flaky_thing_that_fails_then_succeeds():
-            global _threshold
-            await asyncio.sleep(0.1)
-            _threshold += 1
-            assert _threshold != 1
-        """
-        )
-    )
-    # runpytest_subprocess() is required to don't pollute the output
-    # with flaky restart information
-    result = testdir.runpytest_subprocess("--asyncio-mode=strict")
-    result.assert_outcomes(passed=1)
-    result.stdout.fnmatch_lines(
-        [
-            "===Flaky Test Report===",
-            "test_asyncio_flaky_thing_that_fails_then_succeeds passed 1 "
-            "out of the required 2 times. Running test again until it passes 2 times.",
-            "test_asyncio_flaky_thing_that_fails_then_succeeds failed "
-            "(1 runs remaining out of 3).",
-            "	<class 'AssertionError'>",
-            "	assert 1 != 1",
-            "test_asyncio_flaky_thing_that_fails_then_succeeds passed 2 "
-            "out of the required 2 times. Success!",
-            "===End Flaky Test Report===",
-        ]
-    )
