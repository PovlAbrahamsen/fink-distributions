diff -Nurd Test-POE-Server-TCP-1.20.orig/t/00-compile.t Test-POE-Server-TCP-1.20/t/00-compile.t
--- Test-POE-Server-TCP-1.20.orig/t/00-compile.t	2016-04-22 10:11:20.000000000 -0400
+++ Test-POE-Server-TCP-1.20/t/00-compile.t	2025-05-22 22:24:24.000000000 -0400
@@ -8,6 +8,7 @@
 
 plan tests => 1 + ($ENV{AUTHOR_TESTING} ? 1 : 0);
 
+use Config;
 my @module_files = (
     'Test/POE/Server/TCP.pm'
 );
@@ -30,7 +31,21 @@
     # see L<perlfaq8/How can I capture STDERR from an external command?>
     my $stderr = IO::Handle->new;
 
-    my $pid = open3($stdin, '>&STDERR', $stderr, $^X, $inc_switch, '-e', "require q[$lib]");
+    my @command;
+    if ($] >= 5.010 && $Config{"byteorder"} =~ /^1/) {
+        # little-endian means intel (not powerpc), for which fink has
+        # multiple single-arch distros that are seen by a single (fat)
+        # perl interp from apple for a perl version supported by fink
+        # (i.e., starting with 5.10.0). This is the logic taken from
+        # Fink::PkgVersion as of fink-0.29.13.
+        push @command, '/usr/bin/arch';
+        if ( $Config{"longsize"} == 4 ) {
+            push @command, '-i386';   # 32-bit
+        } else {
+            push @command, '-x86_64'; # 64-bit
+        }
+    }
+    my $pid = open3($stdin, '>&STDERR', $stderr, @command, $^X, $inc_switch, '-e', "require q[$lib]");
     binmode $stderr, ':crlf' if $^O eq 'MSWin32';
     my @_warnings = <$stderr>;
     waitpid($pid, 0);
